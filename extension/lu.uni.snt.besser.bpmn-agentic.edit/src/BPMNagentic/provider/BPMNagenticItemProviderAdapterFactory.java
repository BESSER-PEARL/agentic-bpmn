/**
 */
package BPMNagentic.provider;

import BPMNagentic.util.BPMNagenticAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class BPMNagenticItemProviderAdapterFactory extends BPMNagenticAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public BPMNagenticItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.BusinessProcessDiagram} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessProcessDiagramItemProvider businessProcessDiagramItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.BusinessProcessDiagram}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessProcessDiagramAdapter() {
		if (businessProcessDiagramItemProvider == null) {
			businessProcessDiagramItemProvider = new BusinessProcessDiagramItemProvider(this);
		}

		return businessProcessDiagramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.BPMNElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPMNElementItemProvider bpmnElementItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.BPMNElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPMNElementAdapter() {
		if (bpmnElementItemProvider == null) {
			bpmnElementItemProvider = new BPMNElementItemProvider(this);
		}

		return bpmnElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.Lane} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LaneItemProvider laneItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.Lane}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLaneAdapter() {
		if (laneItemProvider == null) {
			laneItemProvider = new LaneItemProvider(this);
		}

		return laneItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.AgenticLane} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AgenticLaneItemProvider agenticLaneItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.AgenticLane}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAgenticLaneAdapter() {
		if (agenticLaneItemProvider == null) {
			agenticLaneItemProvider = new AgenticLaneItemProvider(this);
		}

		return agenticLaneItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.Pool} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PoolItemProvider poolItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.Pool}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPoolAdapter() {
		if (poolItemProvider == null) {
			poolItemProvider = new PoolItemProvider(this);
		}

		return poolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MessageFlow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageFlowItemProvider messageFlowItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MessageFlow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageFlowAdapter() {
		if (messageFlowItemProvider == null) {
			messageFlowItemProvider = new MessageFlowItemProvider(this);
		}

		return messageFlowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.SequenceFlow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SequenceFlowItemProvider sequenceFlowItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.SequenceFlow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSequenceFlowAdapter() {
		if (sequenceFlowItemProvider == null) {
			sequenceFlowItemProvider = new SequenceFlowItemProvider(this);
		}

		return sequenceFlowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.Association} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssociationItemProvider associationItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.Association}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssociationAdapter() {
		if (associationItemProvider == null) {
			associationItemProvider = new AssociationItemProvider(this);
		}

		return associationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.XOR} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XORItemProvider xorItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.XOR}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXORAdapter() {
		if (xorItemProvider == null) {
			xorItemProvider = new XORItemProvider(this);
		}

		return xorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.OR} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ORItemProvider orItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.OR}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createORAdapter() {
		if (orItemProvider == null) {
			orItemProvider = new ORItemProvider(this);
		}

		return orItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.AND} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ANDItemProvider andItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.AND}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createANDAdapter() {
		if (andItemProvider == null) {
			andItemProvider = new ANDItemProvider(this);
		}

		return andItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.AgenticGateway} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AgenticGatewayItemProvider agenticGatewayItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.AgenticGateway}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAgenticGatewayAdapter() {
		if (agenticGatewayItemProvider == null) {
			agenticGatewayItemProvider = new AgenticGatewayItemProvider(this);
		}

		return agenticGatewayItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.DivergingAgenticANDRole} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DivergingAgenticANDRoleItemProvider divergingAgenticANDRoleItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.DivergingAgenticANDRole}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDivergingAgenticANDRoleAdapter() {
		if (divergingAgenticANDRoleItemProvider == null) {
			divergingAgenticANDRoleItemProvider = new DivergingAgenticANDRoleItemProvider(this);
		}

		return divergingAgenticANDRoleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.DivergingAgenticANDVoting} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DivergingAgenticANDVotingItemProvider divergingAgenticANDVotingItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.DivergingAgenticANDVoting}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDivergingAgenticANDVotingAdapter() {
		if (divergingAgenticANDVotingItemProvider == null) {
			divergingAgenticANDVotingItemProvider = new DivergingAgenticANDVotingItemProvider(this);
		}

		return divergingAgenticANDVotingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.DivergingAgenticANDDebate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DivergingAgenticANDDebateItemProvider divergingAgenticANDDebateItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.DivergingAgenticANDDebate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDivergingAgenticANDDebateAdapter() {
		if (divergingAgenticANDDebateItemProvider == null) {
			divergingAgenticANDDebateItemProvider = new DivergingAgenticANDDebateItemProvider(this);
		}

		return divergingAgenticANDDebateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.DivergingAgenticANDCompetition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DivergingAgenticANDCompetitionItemProvider divergingAgenticANDCompetitionItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.DivergingAgenticANDCompetition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDivergingAgenticANDCompetitionAdapter() {
		if (divergingAgenticANDCompetitionItemProvider == null) {
			divergingAgenticANDCompetitionItemProvider = new DivergingAgenticANDCompetitionItemProvider(this);
		}

		return divergingAgenticANDCompetitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticANDRoleLeader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticANDRoleLeaderItemProvider mergingAgenticANDRoleLeaderItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticANDRoleLeader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticANDRoleLeaderAdapter() {
		if (mergingAgenticANDRoleLeaderItemProvider == null) {
			mergingAgenticANDRoleLeaderItemProvider = new MergingAgenticANDRoleLeaderItemProvider(this);
		}

		return mergingAgenticANDRoleLeaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticANDRoleComposed} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticANDRoleComposedItemProvider mergingAgenticANDRoleComposedItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticANDRoleComposed}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticANDRoleComposedAdapter() {
		if (mergingAgenticANDRoleComposedItemProvider == null) {
			mergingAgenticANDRoleComposedItemProvider = new MergingAgenticANDRoleComposedItemProvider(this);
		}

		return mergingAgenticANDRoleComposedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticANDCompetitionFastest} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticANDCompetitionFastestItemProvider mergingAgenticANDCompetitionFastestItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticANDCompetitionFastest}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticANDCompetitionFastestAdapter() {
		if (mergingAgenticANDCompetitionFastestItemProvider == null) {
			mergingAgenticANDCompetitionFastestItemProvider = new MergingAgenticANDCompetitionFastestItemProvider(this);
		}

		return mergingAgenticANDCompetitionFastestItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticANDCompetitionMostComplete} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticANDCompetitionMostCompleteItemProvider mergingAgenticANDCompetitionMostCompleteItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticANDCompetitionMostComplete}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticANDCompetitionMostCompleteAdapter() {
		if (mergingAgenticANDCompetitionMostCompleteItemProvider == null) {
			mergingAgenticANDCompetitionMostCompleteItemProvider = new MergingAgenticANDCompetitionMostCompleteItemProvider(this);
		}

		return mergingAgenticANDCompetitionMostCompleteItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticANDVotingAbsoluteMajority} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticANDVotingAbsoluteMajorityItemProvider mergingAgenticANDVotingAbsoluteMajorityItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticANDVotingAbsoluteMajority}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticANDVotingAbsoluteMajorityAdapter() {
		if (mergingAgenticANDVotingAbsoluteMajorityItemProvider == null) {
			mergingAgenticANDVotingAbsoluteMajorityItemProvider = new MergingAgenticANDVotingAbsoluteMajorityItemProvider(this);
		}

		return mergingAgenticANDVotingAbsoluteMajorityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticANDVotingMajority} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticANDVotingMajorityItemProvider mergingAgenticANDVotingMajorityItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticANDVotingMajority}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticANDVotingMajorityAdapter() {
		if (mergingAgenticANDVotingMajorityItemProvider == null) {
			mergingAgenticANDVotingMajorityItemProvider = new MergingAgenticANDVotingMajorityItemProvider(this);
		}

		return mergingAgenticANDVotingMajorityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticANDVotingMinority} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticANDVotingMinorityItemProvider mergingAgenticANDVotingMinorityItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticANDVotingMinority}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticANDVotingMinorityAdapter() {
		if (mergingAgenticANDVotingMinorityItemProvider == null) {
			mergingAgenticANDVotingMinorityItemProvider = new MergingAgenticANDVotingMinorityItemProvider(this);
		}

		return mergingAgenticANDVotingMinorityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.DivergingAgenticORVoting} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DivergingAgenticORVotingItemProvider divergingAgenticORVotingItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.DivergingAgenticORVoting}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDivergingAgenticORVotingAdapter() {
		if (divergingAgenticORVotingItemProvider == null) {
			divergingAgenticORVotingItemProvider = new DivergingAgenticORVotingItemProvider(this);
		}

		return divergingAgenticORVotingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.DivergingAgenticORDebate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DivergingAgenticORDebateItemProvider divergingAgenticORDebateItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.DivergingAgenticORDebate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDivergingAgenticORDebateAdapter() {
		if (divergingAgenticORDebateItemProvider == null) {
			divergingAgenticORDebateItemProvider = new DivergingAgenticORDebateItemProvider(this);
		}

		return divergingAgenticORDebateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.DivergingAgenticORCompetition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DivergingAgenticORCompetitionItemProvider divergingAgenticORCompetitionItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.DivergingAgenticORCompetition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDivergingAgenticORCompetitionAdapter() {
		if (divergingAgenticORCompetitionItemProvider == null) {
			divergingAgenticORCompetitionItemProvider = new DivergingAgenticORCompetitionItemProvider(this);
		}

		return divergingAgenticORCompetitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticORRoleLeader} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticORRoleLeaderItemProvider mergingAgenticORRoleLeaderItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticORRoleLeader}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticORRoleLeaderAdapter() {
		if (mergingAgenticORRoleLeaderItemProvider == null) {
			mergingAgenticORRoleLeaderItemProvider = new MergingAgenticORRoleLeaderItemProvider(this);
		}

		return mergingAgenticORRoleLeaderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticORRoleComposed} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticORRoleComposedItemProvider mergingAgenticORRoleComposedItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticORRoleComposed}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticORRoleComposedAdapter() {
		if (mergingAgenticORRoleComposedItemProvider == null) {
			mergingAgenticORRoleComposedItemProvider = new MergingAgenticORRoleComposedItemProvider(this);
		}

		return mergingAgenticORRoleComposedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticORCompetitionFastest} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticORCompetitionFastestItemProvider mergingAgenticORCompetitionFastestItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticORCompetitionFastest}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticORCompetitionFastestAdapter() {
		if (mergingAgenticORCompetitionFastestItemProvider == null) {
			mergingAgenticORCompetitionFastestItemProvider = new MergingAgenticORCompetitionFastestItemProvider(this);
		}

		return mergingAgenticORCompetitionFastestItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticORCompetitionMostComplete} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticORCompetitionMostCompleteItemProvider mergingAgenticORCompetitionMostCompleteItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticORCompetitionMostComplete}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticORCompetitionMostCompleteAdapter() {
		if (mergingAgenticORCompetitionMostCompleteItemProvider == null) {
			mergingAgenticORCompetitionMostCompleteItemProvider = new MergingAgenticORCompetitionMostCompleteItemProvider(this);
		}

		return mergingAgenticORCompetitionMostCompleteItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticORVotingAbsoluteMajority} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticORVotingAbsoluteMajorityItemProvider mergingAgenticORVotingAbsoluteMajorityItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticORVotingAbsoluteMajority}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticORVotingAbsoluteMajorityAdapter() {
		if (mergingAgenticORVotingAbsoluteMajorityItemProvider == null) {
			mergingAgenticORVotingAbsoluteMajorityItemProvider = new MergingAgenticORVotingAbsoluteMajorityItemProvider(this);
		}

		return mergingAgenticORVotingAbsoluteMajorityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticORVotingMajority} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticORVotingMajorityItemProvider mergingAgenticORVotingMajorityItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticORVotingMajority}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticORVotingMajorityAdapter() {
		if (mergingAgenticORVotingMajorityItemProvider == null) {
			mergingAgenticORVotingMajorityItemProvider = new MergingAgenticORVotingMajorityItemProvider(this);
		}

		return mergingAgenticORVotingMajorityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.MergingAgenticORVotingMinority} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MergingAgenticORVotingMinorityItemProvider mergingAgenticORVotingMinorityItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.MergingAgenticORVotingMinority}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMergingAgenticORVotingMinorityAdapter() {
		if (mergingAgenticORVotingMinorityItemProvider == null) {
			mergingAgenticORVotingMinorityItemProvider = new MergingAgenticORVotingMinorityItemProvider(this);
		}

		return mergingAgenticORVotingMinorityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.StartEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StartEventItemProvider startEventItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.StartEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStartEventAdapter() {
		if (startEventItemProvider == null) {
			startEventItemProvider = new StartEventItemProvider(this);
		}

		return startEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.IntermediateEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntermediateEventItemProvider intermediateEventItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.IntermediateEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntermediateEventAdapter() {
		if (intermediateEventItemProvider == null) {
			intermediateEventItemProvider = new IntermediateEventItemProvider(this);
		}

		return intermediateEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.EndEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EndEventItemProvider endEventItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.EndEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEndEventAdapter() {
		if (endEventItemProvider == null) {
			endEventItemProvider = new EndEventItemProvider(this);
		}

		return endEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.Activity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActivityItemProvider activityItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.Activity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActivityAdapter() {
		if (activityItemProvider == null) {
			activityItemProvider = new ActivityItemProvider(this);
		}

		return activityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.AgenticTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AgenticTaskItemProvider agenticTaskItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.AgenticTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAgenticTaskAdapter() {
		if (agenticTaskItemProvider == null) {
			agenticTaskItemProvider = new AgenticTaskItemProvider(this);
		}

		return agenticTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.DataObject} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataObjectItemProvider dataObjectItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.DataObject}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataObjectAdapter() {
		if (dataObjectItemProvider == null) {
			dataObjectItemProvider = new DataObjectItemProvider(this);
		}

		return dataObjectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.Group} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupItemProvider groupItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.Group}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupAdapter() {
		if (groupItemProvider == null) {
			groupItemProvider = new GroupItemProvider(this);
		}

		return groupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.Agentic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AgenticItemProvider agenticItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.Agentic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAgenticAdapter() {
		if (agenticItemProvider == null) {
			agenticItemProvider = new AgenticItemProvider(this);
		}

		return agenticItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.AgentWorker} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AgentWorkerItemProvider agentWorkerItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.AgentWorker}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAgentWorkerAdapter() {
		if (agentWorkerItemProvider == null) {
			agentWorkerItemProvider = new AgentWorkerItemProvider(this);
		}

		return agentWorkerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.AgentManager} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AgentManagerItemProvider agentManagerItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.AgentManager}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAgentManagerAdapter() {
		if (agentManagerItemProvider == null) {
			agentManagerItemProvider = new AgentManagerItemProvider(this);
		}

		return agentManagerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.SelfReflection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelfReflectionItemProvider selfReflectionItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.SelfReflection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelfReflectionAdapter() {
		if (selfReflectionItemProvider == null) {
			selfReflectionItemProvider = new SelfReflectionItemProvider(this);
		}

		return selfReflectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.CrossReflection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CrossReflectionItemProvider crossReflectionItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.CrossReflection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCrossReflectionAdapter() {
		if (crossReflectionItemProvider == null) {
			crossReflectionItemProvider = new CrossReflectionItemProvider(this);
		}

		return crossReflectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link BPMNagentic.HumanReflection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HumanReflectionItemProvider humanReflectionItemProvider;

	/**
	 * This creates an adapter for a {@link BPMNagentic.HumanReflection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHumanReflectionAdapter() {
		if (humanReflectionItemProvider == null) {
			humanReflectionItemProvider = new HumanReflectionItemProvider(this);
		}

		return humanReflectionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (businessProcessDiagramItemProvider != null) businessProcessDiagramItemProvider.dispose();
		if (bpmnElementItemProvider != null) bpmnElementItemProvider.dispose();
		if (laneItemProvider != null) laneItemProvider.dispose();
		if (agenticLaneItemProvider != null) agenticLaneItemProvider.dispose();
		if (poolItemProvider != null) poolItemProvider.dispose();
		if (messageFlowItemProvider != null) messageFlowItemProvider.dispose();
		if (sequenceFlowItemProvider != null) sequenceFlowItemProvider.dispose();
		if (associationItemProvider != null) associationItemProvider.dispose();
		if (xorItemProvider != null) xorItemProvider.dispose();
		if (orItemProvider != null) orItemProvider.dispose();
		if (andItemProvider != null) andItemProvider.dispose();
		if (agenticGatewayItemProvider != null) agenticGatewayItemProvider.dispose();
		if (divergingAgenticANDRoleItemProvider != null) divergingAgenticANDRoleItemProvider.dispose();
		if (divergingAgenticANDVotingItemProvider != null) divergingAgenticANDVotingItemProvider.dispose();
		if (divergingAgenticANDDebateItemProvider != null) divergingAgenticANDDebateItemProvider.dispose();
		if (divergingAgenticANDCompetitionItemProvider != null) divergingAgenticANDCompetitionItemProvider.dispose();
		if (mergingAgenticANDRoleLeaderItemProvider != null) mergingAgenticANDRoleLeaderItemProvider.dispose();
		if (mergingAgenticANDRoleComposedItemProvider != null) mergingAgenticANDRoleComposedItemProvider.dispose();
		if (mergingAgenticANDCompetitionFastestItemProvider != null) mergingAgenticANDCompetitionFastestItemProvider.dispose();
		if (mergingAgenticANDCompetitionMostCompleteItemProvider != null) mergingAgenticANDCompetitionMostCompleteItemProvider.dispose();
		if (mergingAgenticANDVotingAbsoluteMajorityItemProvider != null) mergingAgenticANDVotingAbsoluteMajorityItemProvider.dispose();
		if (mergingAgenticANDVotingMajorityItemProvider != null) mergingAgenticANDVotingMajorityItemProvider.dispose();
		if (mergingAgenticANDVotingMinorityItemProvider != null) mergingAgenticANDVotingMinorityItemProvider.dispose();
		if (divergingAgenticORVotingItemProvider != null) divergingAgenticORVotingItemProvider.dispose();
		if (divergingAgenticORDebateItemProvider != null) divergingAgenticORDebateItemProvider.dispose();
		if (divergingAgenticORCompetitionItemProvider != null) divergingAgenticORCompetitionItemProvider.dispose();
		if (mergingAgenticORRoleLeaderItemProvider != null) mergingAgenticORRoleLeaderItemProvider.dispose();
		if (mergingAgenticORRoleComposedItemProvider != null) mergingAgenticORRoleComposedItemProvider.dispose();
		if (mergingAgenticORCompetitionFastestItemProvider != null) mergingAgenticORCompetitionFastestItemProvider.dispose();
		if (mergingAgenticORCompetitionMostCompleteItemProvider != null) mergingAgenticORCompetitionMostCompleteItemProvider.dispose();
		if (mergingAgenticORVotingAbsoluteMajorityItemProvider != null) mergingAgenticORVotingAbsoluteMajorityItemProvider.dispose();
		if (mergingAgenticORVotingMajorityItemProvider != null) mergingAgenticORVotingMajorityItemProvider.dispose();
		if (mergingAgenticORVotingMinorityItemProvider != null) mergingAgenticORVotingMinorityItemProvider.dispose();
		if (startEventItemProvider != null) startEventItemProvider.dispose();
		if (intermediateEventItemProvider != null) intermediateEventItemProvider.dispose();
		if (endEventItemProvider != null) endEventItemProvider.dispose();
		if (activityItemProvider != null) activityItemProvider.dispose();
		if (agenticTaskItemProvider != null) agenticTaskItemProvider.dispose();
		if (dataObjectItemProvider != null) dataObjectItemProvider.dispose();
		if (groupItemProvider != null) groupItemProvider.dispose();
		if (agenticItemProvider != null) agenticItemProvider.dispose();
		if (agentWorkerItemProvider != null) agentWorkerItemProvider.dispose();
		if (agentManagerItemProvider != null) agentManagerItemProvider.dispose();
		if (selfReflectionItemProvider != null) selfReflectionItemProvider.dispose();
		if (crossReflectionItemProvider != null) crossReflectionItemProvider.dispose();
		if (humanReflectionItemProvider != null) humanReflectionItemProvider.dispose();
	}

}
